        // static getDerivedStateFromProps(props, state) {
    //     console.log('getDerivedStateFromProps')
    //     // const jwt = auth.isAuthenticated()
    //     // const isLike = nextProps.post.likes.indexOf(jwt.user._id) !== -1
    //     // if (prevState.like !== isLike) {
    //     //     console.log('like')
    //     //     return { like: isLike }
    //     // }
    //     // if (prevState.likes !== nextProps.post.likes.length) {
    //     //     console.log('likes')
    //     //     return { likes: nextProps.post.likes.length }
    //     // }
    //     console.log('prevState.comments: ', state.comments)
    //     console.log('nextProps.post.comments: ', props.post.comments)
    //     if (props.post.comments !== state.comments) {
    //         return {
    //             comments: props.post.comments
    //         }
    //     }
    //     // console.log('nextProps: ', nextProps)
    //     // console.log('nextProps.likes: ', nextProps.post.likes)
    //     // console.log('nextProps.like.length: ', nextProps.post.likes.length)
    //     // console.log('prevState: ', prevState)
    //     return null
    // }
    
    
    
    // likePost = () => {
    //     const jwt = auth.isAuthenticated()
    //     like(
    //         {
    //             userId: jwt.user._id,
    //         },
    //         {
    //             t: jwt.token,
    //         },
    //         this.props.post._id
    //     )
    //         .then(response => {
    //             //console.log(response.data)
    //             const checkForUserRedundancy = response.data.likes.some(
    //                 like => {
    //                     return like._id === jwt.user._id
    //                 }
    //             )
    //             if (!checkForUserRedundancy) {
    //                 this.setState({
    //                     like: true,
    //                     likes: response.data.likes.length,
    //                 })
    //             }
    //         })
    //         .catch(error => {
    //             console.log(error.response.data.error)
    //         })
    // }

    // unlikePost = () => {
    //     const jwt = auth.isAuthenticated()
    //     unlike(
    //         {
    //             userId: jwt.user._id,
    //         },
    //         {
    //             t: jwt.token,
    //         },
    //         this.props.post._id
    //     )
    //         .then(response => {
    //             //console.log(response.data)
    //             const checkForUserRedundancy = response.data.likes.some(
    //                 like => {
    //                     return like._id === jwt.user._id
    //                 }
    //             )
    //             if (!checkForUserRedundancy) {
    //                 this.setState({
    //                     like: false,
    //                     likes: response.data.likes.length,
    //                 })
    //             }
    //         })
    //         .catch(error => {
    //             console.log(error.response.data.error)
    //         })
    // }